Terminals unused in grammar

    "then"
    "simplespace"
    "newline"
    "multispace"
    "linecomment"
    UMINUS


State 142 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt
    2        | stmt program

    3 stmt: expr ";"
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | "break" ";"
    9     | "continue" ";"
   10     | block
   11     | funcdef

   12 expr: assignexpr
   13     | expr "+" expr
   14     | expr "-" expr
   15     | expr "*" expr
   16     | expr "/" expr
   17     | expr "%" expr
   18     | expr ">" expr
   19     | expr ">=" expr
   20     | expr "<" expr
   21     | expr "<=" expr
   22     | expr "==" expr
   23     | expr "!=" expr
   24     | expr "and" expr
   25     | expr "or" expr
   26     | term

   27 term: "(" expr ")"
   28     | "-" expr
   29     | "not" expr
   30     | "++" lvalue
   31     | lvalue "++"
   32     | "--" lvalue
   33     | lvalue "--"
   34     | primary

   35 assignexpr: lvalue "=" expr

   36 primary: lvalue
   37        | call
   38        | objectdef
   39        | "(" funcdef ")"
   40        | const

   41 lvalue: "id"
   42       | LOCALY "id"
   43       | "::" "id"
   44       | member

   45 member: lvalue "." "id"
   46       | lvalue "[" expr "]"
   47       | call "." "id"
   48       | call "[" expr "]"

   49 call: call "(" elist ")"
   50     | lvalue callsuffix
   51     | "(" funcdef ")" "(" elist ")"

   52 callsuffix: normcall
   53           | methodcall

   54 $@1: %empty

   55 normcall: "(" elist $@1 ")"

   56 methodcall: ".." "id" "(" elist ")"

   57 elist: expr
   58      | elist "," expr

   59 objectdef: "[" elist "]"
   60          | "[" indexed "]"

   61 indexed: indexedelem
   62        | indexed "," indexedelem

   63 indexedelem: "{" expr ":" expr "}"

   64 block: "{" stmt "}"

   65 $@2: %empty

   66 funcdef: "function" "[" "id" "]" "(" $@2 idlist ")" block

   67 const: "int"
   68      | "double"
   69      | "nil"
   70      | "true"
   71      | "false"

   72 idlist: "id"
   73       | idlist "," "id"

   74 ifstmt: "if" "(" expr ")" stmt
   75       | "if" "(" expr ")" stmt "else" stmt

   76 whilestmt: "while" "(" expr ")" stmt

   77 forstmt: "for" "(" elist ";" expr ";" elist ")" stmt

   78 returnstmt: "return" ";"
   79           | "return" expr ";"


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "id" <stringValue> (258) 41 42 43 45 47 56 66 72 73
    "int" <intValue> (259) 67
    "double" <doubValue> (260) 68
    "if" <stringValue> (261) 74 75
    "else" <stringValue> (262) 75
    "then" <stringValue> (263)
    "for" <stringValue> (264) 77
    "while" <stringValue> (265) 76
    "break" <stringValue> (266) 8
    "continue" <stringValue> (267) 9
    "return" <stringValue> (268) 78 79
    "true" <stringValue> (269) 70
    "false" <stringValue> (270) 71
    "not" <stringValue> (271) 29
    "and" <stringValue> (272) 24
    "or" <stringValue> (273) 25
    "function" <stringValue> (274) 66
    "nil" <stringValue> (275) 69
    "simplespace" <stringValue> (276)
    "newline" <stringValue> (277)
    "multispace" <stringValue> (278)
    "linecomment" <stringValue> (279)
    "[" <stringValue> (280) 46 48 59 60 66
    "]" <stringValue> (281) 46 48 59 60 66
    "(" <stringValue> (282) 27 39 49 51 55 56 66 74 75 76 77
    ")" <stringValue> (283) 27 39 49 51 55 56 66 74 75 76 77
    "{" <stringValue> (284) 63 64
    "}" <stringValue> (285) 63 64
    ":" <stringValue> (286) 63
    ";" <stringValue> (287) 3 8 9 77 78 79
    "," <stringValue> (288) 58 62 73
    "." <stringValue> (289) 45 47
    ".." <stringValue> (290) 56
    "+" <stringValue> (291) 13
    "-" <stringValue> (292) 14 28
    "*" <stringValue> (293) 15
    "/" <stringValue> (294) 16
    "%" <stringValue> (295) 17
    "++" <stringValue> (296) 30 31
    "--" <stringValue> (297) 32 33
    "=" <stringValue> (298) 35
    "!=" <stringValue> (299) 23
    ">" <stringValue> (300) 18
    "<" <stringValue> (301) 20
    "<=" <stringValue> (302) 21
    ">=" <stringValue> (303) 19
    "==" <stringValue> (304) 22
    "::" <stringValue> (305) 43
    LOCALY (306) 42
    UMINUS (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1 2
        on right: 0 2
    stmt (55)
        on left: 3 4 5 6 7 8 9 10 11
        on right: 1 2 64 74 75 76 77
    expr (56)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 3 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 35 46 48 57 58 63 74 75 76 77 79
    term (57)
        on left: 27 28 29 30 31 32 33 34
        on right: 26
    assignexpr (58)
        on left: 35
        on right: 12
    primary (59)
        on left: 36 37 38 39 40
        on right: 34
    lvalue (60)
        on left: 41 42 43 44
        on right: 30 31 32 33 35 36 45 46 50
    member (61)
        on left: 45 46 47 48
        on right: 44
    call (62)
        on left: 49 50 51
        on right: 37 47 48 49
    callsuffix (63)
        on left: 52 53
        on right: 50
    normcall (64)
        on left: 55
        on right: 52
    $@1 (65)
        on left: 54
        on right: 55
    methodcall (66)
        on left: 56
        on right: 53
    elist (67)
        on left: 57 58
        on right: 49 51 55 56 58 59 77
    objectdef (68)
        on left: 59 60
        on right: 38
    indexed (69)
        on left: 61 62
        on right: 60 62
    indexedelem (70)
        on left: 63
        on right: 61 62
    block (71)
        on left: 64
        on right: 10 66
    funcdef (72)
        on left: 66
        on right: 11 39 51
    $@2 (73)
        on left: 65
        on right: 66
    const (74)
        on left: 67 68 69 70 71
        on right: 40
    idlist (75)
        on left: 72 73
        on right: 66 73
    ifstmt (76)
        on left: 74 75
        on right: 4
    whilestmt (77)
        on left: 76
        on right: 5
    forstmt (78)
        on left: 77
        on right: 6
    returnstmt (79)
        on left: 78 79
        on right: 7


State 0

    0 $accept: • program $end

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    program     go to state 23
    stmt        go to state 24
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 1

   41 lvalue: "id" •

    $default  reduce using rule 41 (lvalue)


State 2

   67 const: "int" •

    $default  reduce using rule 67 (const)


State 3

   68 const: "double" •

    $default  reduce using rule 68 (const)


State 4

   74 ifstmt: "if" • "(" expr ")" stmt
   75       | "if" • "(" expr ")" stmt "else" stmt

    "("  shift, and go to state 40


State 5

   77 forstmt: "for" • "(" elist ";" expr ";" elist ")" stmt

    "("  shift, and go to state 41


State 6

   76 whilestmt: "while" • "(" expr ")" stmt

    "("  shift, and go to state 42


State 7

    8 stmt: "break" • ";"

    ";"  shift, and go to state 43


State 8

    9 stmt: "continue" • ";"

    ";"  shift, and go to state 44


State 9

   78 returnstmt: "return" • ";"
   79           | "return" • expr ";"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    ";"       shift, and go to state 45
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 46
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 10

   70 const: "true" •

    $default  reduce using rule 70 (const)


State 11

   71 const: "false" •

    $default  reduce using rule 71 (const)


State 12

   29 term: "not" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 47
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 13

   66 funcdef: "function" • "[" "id" "]" "(" $@2 idlist ")" block

    "["  shift, and go to state 48


State 14

   69 const: "nil" •

    $default  reduce using rule 69 (const)


State 15

   59 objectdef: "[" • elist "]"
   60          | "[" • indexed "]"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "{"       shift, and go to state 49
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr         go to state 50
    term         go to state 26
    assignexpr   go to state 27
    primary      go to state 28
    lvalue       go to state 29
    member       go to state 30
    call         go to state 31
    elist        go to state 51
    objectdef    go to state 32
    indexed      go to state 52
    indexedelem  go to state 53
    const        go to state 35


State 16

   27 term: "(" • expr ")"
   39 primary: "(" • funcdef ")"
   51 call: "(" • funcdef ")" "(" elist ")"

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    expr        go to state 54
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    funcdef     go to state 55
    const       go to state 35


State 17

   64 block: "{" • stmt "}"

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    stmt        go to state 56
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 18

   28 term: "-" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 57
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 19

   30 term: "++" • lvalue

    "id"    shift, and go to state 1
    "("     shift, and go to state 58
    "::"    shift, and go to state 21
    LOCALY  shift, and go to state 22

    lvalue  go to state 59
    member  go to state 30
    call    go to state 60


State 20

   32 term: "--" • lvalue

    "id"    shift, and go to state 1
    "("     shift, and go to state 58
    "::"    shift, and go to state 21
    LOCALY  shift, and go to state 22

    lvalue  go to state 61
    member  go to state 30
    call    go to state 60


State 21

   43 lvalue: "::" • "id"

    "id"  shift, and go to state 62


State 22

   42 lvalue: LOCALY • "id"

    "id"  shift, and go to state 63


State 23

    0 $accept: program • $end

    $end  shift, and go to state 64


State 24

    1 program: stmt •
    2        | stmt • program

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    $default  reduce using rule 1 (program)

    program     go to state 65
    stmt        go to state 24
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 25

    3 stmt: expr • ";"
   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ";"    shift, and go to state 68
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 26

   26 expr: term •

    $default  reduce using rule 26 (expr)


State 27

   12 expr: assignexpr •

    $default  reduce using rule 12 (expr)


State 28

   34 term: primary •

    $default  reduce using rule 34 (term)


State 29

   31 term: lvalue • "++"
   33     | lvalue • "--"
   35 assignexpr: lvalue • "=" expr
   36 primary: lvalue •
   45 member: lvalue • "." "id"
   46       | lvalue • "[" expr "]"
   50 call: lvalue • callsuffix

    "["   shift, and go to state 80
    "("   shift, and go to state 81
    "."   shift, and go to state 82
    ".."  shift, and go to state 83
    "++"  shift, and go to state 84
    "--"  shift, and go to state 85
    "="   shift, and go to state 86

    $default  reduce using rule 36 (primary)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 30

   44 lvalue: member •

    $default  reduce using rule 44 (lvalue)


State 31

   37 primary: call •
   47 member: call • "." "id"
   48       | call • "[" expr "]"
   49 call: call • "(" elist ")"

    "["  shift, and go to state 90
    "("  shift, and go to state 91
    "."  shift, and go to state 92

    $default  reduce using rule 37 (primary)


State 32

   38 primary: objectdef •

    $default  reduce using rule 38 (primary)


State 33

   10 stmt: block •

    $default  reduce using rule 10 (stmt)


State 34

   11 stmt: funcdef •

    $default  reduce using rule 11 (stmt)


State 35

   40 primary: const •

    $default  reduce using rule 40 (primary)


State 36

    4 stmt: ifstmt •

    $default  reduce using rule 4 (stmt)


State 37

    5 stmt: whilestmt •

    $default  reduce using rule 5 (stmt)


State 38

    6 stmt: forstmt •

    $default  reduce using rule 6 (stmt)


State 39

    7 stmt: returnstmt •

    $default  reduce using rule 7 (stmt)


State 40

   74 ifstmt: "if" "(" • expr ")" stmt
   75       | "if" "(" • expr ")" stmt "else" stmt

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 93
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 41

   77 forstmt: "for" "(" • elist ";" expr ";" elist ")" stmt

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 94
    objectdef   go to state 32
    const       go to state 35


State 42

   76 whilestmt: "while" "(" • expr ")" stmt

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 95
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 43

    8 stmt: "break" ";" •

    $default  reduce using rule 8 (stmt)


State 44

    9 stmt: "continue" ";" •

    $default  reduce using rule 9 (stmt)


State 45

   78 returnstmt: "return" ";" •

    $default  reduce using rule 78 (returnstmt)


State 46

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   79 returnstmt: "return" expr • ";"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ";"    shift, and go to state 96
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 47

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   29 term: "not" expr •

    $default  reduce using rule 29 (term)


State 48

   66 funcdef: "function" "[" • "id" "]" "(" $@2 idlist ")" block

    "id"  shift, and go to state 97


State 49

   63 indexedelem: "{" • expr ":" expr "}"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 98
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 50

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   57 elist: expr •

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79

    $default  reduce using rule 57 (elist)


State 51

   58 elist: elist • "," expr
   59 objectdef: "[" elist • "]"

    "]"  shift, and go to state 99
    ","  shift, and go to state 100


State 52

   60 objectdef: "[" indexed • "]"
   62 indexed: indexed • "," indexedelem

    "]"  shift, and go to state 101
    ","  shift, and go to state 102


State 53

   61 indexed: indexedelem •

    $default  reduce using rule 61 (indexed)


State 54

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   27 term: "(" expr • ")"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ")"    shift, and go to state 103
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 55

   39 primary: "(" funcdef • ")"
   51 call: "(" funcdef • ")" "(" elist ")"

    ")"  shift, and go to state 104


State 56

   64 block: "{" stmt • "}"

    "}"  shift, and go to state 105


State 57

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   28 term: "-" expr •

    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    $default  reduce using rule 28 (term)


State 58

   51 call: "(" • funcdef ")" "(" elist ")"

    "function"  shift, and go to state 13

    funcdef  go to state 106


State 59

   30 term: "++" lvalue •
   45 member: lvalue • "." "id"
   46       | lvalue • "[" expr "]"
   50 call: lvalue • callsuffix

    "["   shift, and go to state 80
    "("   shift, and go to state 81
    "."   shift, and go to state 82
    ".."  shift, and go to state 83

    $default  reduce using rule 30 (term)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 60

   47 member: call • "." "id"
   48       | call • "[" expr "]"
   49 call: call • "(" elist ")"

    "["  shift, and go to state 90
    "("  shift, and go to state 91
    "."  shift, and go to state 92


State 61

   32 term: "--" lvalue •
   45 member: lvalue • "." "id"
   46       | lvalue • "[" expr "]"
   50 call: lvalue • callsuffix

    "["   shift, and go to state 80
    "("   shift, and go to state 81
    "."   shift, and go to state 82
    ".."  shift, and go to state 83

    $default  reduce using rule 32 (term)

    callsuffix  go to state 87
    normcall    go to state 88
    methodcall  go to state 89


State 62

   43 lvalue: "::" "id" •

    $default  reduce using rule 43 (lvalue)


State 63

   42 lvalue: LOCALY "id" •

    $default  reduce using rule 42 (lvalue)


State 64

    0 $accept: program $end •

    $default  accept


State 65

    2 program: stmt program •

    $default  reduce using rule 2 (program)


State 66

   24 expr: expr "and" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 107
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 67

   25 expr: expr "or" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 108
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 68

    3 stmt: expr ";" •

    $default  reduce using rule 3 (stmt)


State 69

   13 expr: expr "+" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 109
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 70

   14 expr: expr "-" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 110
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 71

   15 expr: expr "*" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 111
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 72

   16 expr: expr "/" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 112
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 73

   17 expr: expr "%" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 113
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 74

   23 expr: expr "!=" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 114
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 75

   18 expr: expr ">" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 115
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 76

   20 expr: expr "<" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 116
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 77

   21 expr: expr "<=" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 117
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 78

   19 expr: expr ">=" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 118
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 79

   22 expr: expr "==" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 119
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 80

   46 member: lvalue "[" • expr "]"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 120
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 81

   55 normcall: "(" • elist $@1 ")"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 121
    objectdef   go to state 32
    const       go to state 35


State 82

   45 member: lvalue "." • "id"

    "id"  shift, and go to state 122


State 83

   56 methodcall: ".." • "id" "(" elist ")"

    "id"  shift, and go to state 123


State 84

   31 term: lvalue "++" •

    $default  reduce using rule 31 (term)


State 85

   33 term: lvalue "--" •

    $default  reduce using rule 33 (term)


State 86

   35 assignexpr: lvalue "=" • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 124
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 87

   50 call: lvalue callsuffix •

    $default  reduce using rule 50 (call)


State 88

   52 callsuffix: normcall •

    $default  reduce using rule 52 (callsuffix)


State 89

   53 callsuffix: methodcall •

    $default  reduce using rule 53 (callsuffix)


State 90

   48 member: call "[" • expr "]"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 125
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 91

   49 call: call "(" • elist ")"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 126
    objectdef   go to state 32
    const       go to state 35


State 92

   47 member: call "." • "id"

    "id"  shift, and go to state 127


State 93

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   74 ifstmt: "if" "(" expr • ")" stmt
   75       | "if" "(" expr • ")" stmt "else" stmt

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ")"    shift, and go to state 128
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 94

   58 elist: elist • "," expr
   77 forstmt: "for" "(" elist • ";" expr ";" elist ")" stmt

    ";"  shift, and go to state 129
    ","  shift, and go to state 100


State 95

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   76 whilestmt: "while" "(" expr • ")" stmt

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ")"    shift, and go to state 130
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 96

   79 returnstmt: "return" expr ";" •

    $default  reduce using rule 79 (returnstmt)


State 97

   66 funcdef: "function" "[" "id" • "]" "(" $@2 idlist ")" block

    "]"  shift, and go to state 131


State 98

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   63 indexedelem: "{" expr • ":" expr "}"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ":"    shift, and go to state 132
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 99

   59 objectdef: "[" elist "]" •

    $default  reduce using rule 59 (objectdef)


State 100

   58 elist: elist "," • expr

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 133
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 101

   60 objectdef: "[" indexed "]" •

    $default  reduce using rule 60 (objectdef)


State 102

   62 indexed: indexed "," • indexedelem

    "{"  shift, and go to state 49

    indexedelem  go to state 134


State 103

   27 term: "(" expr ")" •

    $default  reduce using rule 27 (term)


State 104

   39 primary: "(" funcdef ")" •
   51 call: "(" funcdef ")" • "(" elist ")"

    "("  shift, and go to state 135

    $default  reduce using rule 39 (primary)


State 105

   64 block: "{" stmt "}" •

    $default  reduce using rule 64 (block)


State 106

   51 call: "(" funcdef • ")" "(" elist ")"

    ")"  shift, and go to state 136


State 107

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   24     | expr "and" expr •
   25     | expr • "or" expr

    "+"   shift, and go to state 69
    "-"   shift, and go to state 70
    "*"   shift, and go to state 71
    "/"   shift, and go to state 72
    "%"   shift, and go to state 73
    "!="  shift, and go to state 74
    ">"   shift, and go to state 75
    "<"   shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78
    "=="  shift, and go to state 79

    $default  reduce using rule 24 (expr)


State 108

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   25     | expr "or" expr •

    "and"  shift, and go to state 66
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79

    $default  reduce using rule 25 (expr)


State 109

   13 expr: expr • "+" expr
   13     | expr "+" expr •
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    $default  reduce using rule 13 (expr)


State 110

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   14     | expr "-" expr •
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    $default  reduce using rule 14 (expr)


State 111

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   15     | expr "*" expr •
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    $default  reduce using rule 15 (expr)


State 112

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   16     | expr "/" expr •
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    $default  reduce using rule 16 (expr)


State 113

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   17     | expr "%" expr •
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    $default  reduce using rule 17 (expr)


State 114

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   23     | expr "!=" expr •
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"   shift, and go to state 69
    "-"   shift, and go to state 70
    "*"   shift, and go to state 71
    "/"   shift, and go to state 72
    "%"   shift, and go to state 73
    ">"   shift, and go to state 75
    "<"   shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78

    "!="  error (nonassociative)
    "=="  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 115

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   18     | expr ">" expr •
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"  shift, and go to state 69
    "-"  shift, and go to state 70
    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    ">"   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 18 (expr)


State 116

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   20     | expr "<" expr •
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"  shift, and go to state 69
    "-"  shift, and go to state 70
    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    ">"   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 117

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   21     | expr "<=" expr •
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"  shift, and go to state 69
    "-"  shift, and go to state 70
    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    ">"   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 118

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   19     | expr ">=" expr •
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"  shift, and go to state 69
    "-"  shift, and go to state 70
    "*"  shift, and go to state 71
    "/"  shift, and go to state 72
    "%"  shift, and go to state 73

    ">"   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 119

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   22     | expr "==" expr •
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr

    "+"   shift, and go to state 69
    "-"   shift, and go to state 70
    "*"   shift, and go to state 71
    "/"   shift, and go to state 72
    "%"   shift, and go to state 73
    ">"   shift, and go to state 75
    "<"   shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78

    "!="  error (nonassociative)
    "=="  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 120

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   46 member: lvalue "[" expr • "]"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "]"    shift, and go to state 137
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 121

   55 normcall: "(" elist • $@1 ")"
   58 elist: elist • "," expr

    ","  shift, and go to state 100

    $default  reduce using rule 54 ($@1)

    $@1  go to state 138


State 122

   45 member: lvalue "." "id" •

    $default  reduce using rule 45 (member)


State 123

   56 methodcall: ".." "id" • "(" elist ")"

    "("  shift, and go to state 139


State 124

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   35 assignexpr: lvalue "=" expr •

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79

    $default  reduce using rule 35 (assignexpr)


State 125

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   48 member: call "[" expr • "]"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "]"    shift, and go to state 140
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 126

   49 call: call "(" elist • ")"
   58 elist: elist • "," expr

    ")"  shift, and go to state 141
    ","  shift, and go to state 100


State 127

   47 member: call "." "id" •

    $default  reduce using rule 47 (member)


State 128

   74 ifstmt: "if" "(" expr ")" • stmt
   75       | "if" "(" expr ")" • stmt "else" stmt

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    stmt        go to state 142
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 129

   77 forstmt: "for" "(" elist ";" • expr ";" elist ")" stmt

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 143
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 130

   76 whilestmt: "while" "(" expr ")" • stmt

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    stmt        go to state 144
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 131

   66 funcdef: "function" "[" "id" "]" • "(" $@2 idlist ")" block

    "("  shift, and go to state 145


State 132

   63 indexedelem: "{" expr ":" • expr "}"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 146
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    const       go to state 35


State 133

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   58 elist: elist "," expr •

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79

    $default  reduce using rule 58 (elist)


State 134

   62 indexed: indexed "," indexedelem •

    $default  reduce using rule 62 (indexed)


State 135

   51 call: "(" funcdef ")" "(" • elist ")"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 147
    objectdef   go to state 32
    const       go to state 35


State 136

   51 call: "(" funcdef ")" • "(" elist ")"

    "("  shift, and go to state 135


State 137

   46 member: lvalue "[" expr "]" •

    $default  reduce using rule 46 (member)


State 138

   55 normcall: "(" elist $@1 • ")"

    ")"  shift, and go to state 148


State 139

   56 methodcall: ".." "id" "(" • elist ")"

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 149
    objectdef   go to state 32
    const       go to state 35


State 140

   48 member: call "[" expr "]" •

    $default  reduce using rule 48 (member)


State 141

   49 call: call "(" elist ")" •

    $default  reduce using rule 49 (call)


State 142

   74 ifstmt: "if" "(" expr ")" stmt •
   75       | "if" "(" expr ")" stmt • "else" stmt

    "else"  shift, and go to state 150

    "else"    [reduce using rule 74 (ifstmt)]
    $default  reduce using rule 74 (ifstmt)


State 143

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   77 forstmt: "for" "(" elist ";" expr • ";" elist ")" stmt

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    ";"    shift, and go to state 151
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 144

   76 whilestmt: "while" "(" expr ")" stmt •

    $default  reduce using rule 76 (whilestmt)


State 145

   66 funcdef: "function" "[" "id" "]" "(" • $@2 idlist ")" block

    $default  reduce using rule 65 ($@2)

    $@2  go to state 152


State 146

   13 expr: expr • "+" expr
   14     | expr • "-" expr
   15     | expr • "*" expr
   16     | expr • "/" expr
   17     | expr • "%" expr
   18     | expr • ">" expr
   19     | expr • ">=" expr
   20     | expr • "<" expr
   21     | expr • "<=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | expr • "and" expr
   25     | expr • "or" expr
   63 indexedelem: "{" expr ":" expr • "}"

    "and"  shift, and go to state 66
    "or"   shift, and go to state 67
    "}"    shift, and go to state 153
    "+"    shift, and go to state 69
    "-"    shift, and go to state 70
    "*"    shift, and go to state 71
    "/"    shift, and go to state 72
    "%"    shift, and go to state 73
    "!="   shift, and go to state 74
    ">"    shift, and go to state 75
    "<"    shift, and go to state 76
    "<="   shift, and go to state 77
    ">="   shift, and go to state 78
    "=="   shift, and go to state 79


State 147

   51 call: "(" funcdef ")" "(" elist • ")"
   58 elist: elist • "," expr

    ")"  shift, and go to state 154
    ","  shift, and go to state 100


State 148

   55 normcall: "(" elist $@1 ")" •

    $default  reduce using rule 55 (normcall)


State 149

   56 methodcall: ".." "id" "(" elist • ")"
   58 elist: elist • "," expr

    ")"  shift, and go to state 155
    ","  shift, and go to state 100


State 150

   75 ifstmt: "if" "(" expr ")" stmt "else" • stmt

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    stmt        go to state 156
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 151

   77 forstmt: "for" "(" elist ";" expr ";" • elist ")" stmt

    "id"      shift, and go to state 1
    "int"     shift, and go to state 2
    "double"  shift, and go to state 3
    "true"    shift, and go to state 10
    "false"   shift, and go to state 11
    "not"     shift, and go to state 12
    "nil"     shift, and go to state 14
    "["       shift, and go to state 15
    "("       shift, and go to state 16
    "-"       shift, and go to state 18
    "++"      shift, and go to state 19
    "--"      shift, and go to state 20
    "::"      shift, and go to state 21
    LOCALY    shift, and go to state 22

    expr        go to state 50
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    elist       go to state 157
    objectdef   go to state 32
    const       go to state 35


State 152

   66 funcdef: "function" "[" "id" "]" "(" $@2 • idlist ")" block

    "id"  shift, and go to state 158

    idlist  go to state 159


State 153

   63 indexedelem: "{" expr ":" expr "}" •

    $default  reduce using rule 63 (indexedelem)


State 154

   51 call: "(" funcdef ")" "(" elist ")" •

    $default  reduce using rule 51 (call)


State 155

   56 methodcall: ".." "id" "(" elist ")" •

    $default  reduce using rule 56 (methodcall)


State 156

   75 ifstmt: "if" "(" expr ")" stmt "else" stmt •

    $default  reduce using rule 75 (ifstmt)


State 157

   58 elist: elist • "," expr
   77 forstmt: "for" "(" elist ";" expr ";" elist • ")" stmt

    ")"  shift, and go to state 160
    ","  shift, and go to state 100


State 158

   72 idlist: "id" •

    $default  reduce using rule 72 (idlist)


State 159

   66 funcdef: "function" "[" "id" "]" "(" $@2 idlist • ")" block
   73 idlist: idlist • "," "id"

    ")"  shift, and go to state 161
    ","  shift, and go to state 162


State 160

   77 forstmt: "for" "(" elist ";" expr ";" elist ")" • stmt

    "id"        shift, and go to state 1
    "int"       shift, and go to state 2
    "double"    shift, and go to state 3
    "if"        shift, and go to state 4
    "for"       shift, and go to state 5
    "while"     shift, and go to state 6
    "break"     shift, and go to state 7
    "continue"  shift, and go to state 8
    "return"    shift, and go to state 9
    "true"      shift, and go to state 10
    "false"     shift, and go to state 11
    "not"       shift, and go to state 12
    "function"  shift, and go to state 13
    "nil"       shift, and go to state 14
    "["         shift, and go to state 15
    "("         shift, and go to state 16
    "{"         shift, and go to state 17
    "-"         shift, and go to state 18
    "++"        shift, and go to state 19
    "--"        shift, and go to state 20
    "::"        shift, and go to state 21
    LOCALY      shift, and go to state 22

    stmt        go to state 163
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 161

   66 funcdef: "function" "[" "id" "]" "(" $@2 idlist ")" • block

    "{"  shift, and go to state 17

    block  go to state 164


State 162

   73 idlist: idlist "," • "id"

    "id"  shift, and go to state 165


State 163

   77 forstmt: "for" "(" elist ";" expr ";" elist ")" stmt •

    $default  reduce using rule 77 (forstmt)


State 164

   66 funcdef: "function" "[" "id" "]" "(" $@2 idlist ")" block •

    $default  reduce using rule 66 (funcdef)


State 165

   73 idlist: idlist "," "id" •

    $default  reduce using rule 73 (idlist)
